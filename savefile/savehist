;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(read-expression-history file-name-history buffer-name-history extended-command-history magit-read-rev-history query-replace-history minibuffer-history-search-history ido-buffer-history ido-file-history minibuffer-history))
(setq read-expression-history '("(inf-ruby-keys)" "(inf-ruby-setup-keybindings)"))
(setq file-name-history '("/home/samiur/personal/jobsuitors-website/app/views/jobseekers/new.html.erb" "/home/samiur/.emacs.d/nxhtml/autostart.el" "/home/samiur/personal/jobsuitors-website/app/views/jobseekers/_profile.html.erb" "/home/samiur/personal/jobsuitors-website/app/views/registrations/linkedin.html.erb" "/home/samiur/personal/jobsuitors-website/app/views/home/_sign_in.html.erb" "/home/samiur/personal/jobsuitors-website/app/controllers/linkedin_controller.rb" "/home/samiur/.emacs.d/elpa/inf-ruby-20121215.1127/inf-ruby.el" "/home/samiur/personal/jobsuitors-website/Gemfile" "~/personal/jobsuitors-website/README.md" "~/.emacs.d/init.el" "~/.emacs.d/el-get/.loaddefs.el" "~/.emacs.d/elpa/inf-ruby-20121215.1127/inf-ruby-autoloads.el" "~/.emacs.d/elpa/archives/melpa/archive-contents" "~/.emacs.d/elpa/archives/marmalade/archive-contents" "~/.emacs.d/elpa/archives/gnu/archive-contents" "~/.emacs.d/elpa/archives/tromey/archive-contents" "~/personal/jobsuitors-website/Gemfile" "~/.emacs.d/elpa/nxml-mode-20041004/nxml-mode-autoloads.el" "~/personal/jobsuitors-website/.git/COMMIT_EDITMSG" "~/personal/jobsuitors-website/app/views/jobseekers/new.html.erb" "~/personal/jobsuitors-website/app/views/users/new.html.erb" "~/personal/jobsuitors-website/app/views/registrations/new.html.erb" "~/personal/jobsuitors-website/.gitignore" "~/.zshrc" "~/.emacs.d/url/cookies" "~/personal/jobsuitors-website/app/controllers/users_controller.rb" "~/.emacs.d/elpa/rect-mark-1.4/rect-mark-autoloads.el" "~/personal/jobsuitors-blog/.git/COMMIT_EDITMSG" "~/ie.hera-fw/core/app/control/USB_controller.cpp" "~/.davfs2/secrets"))
(setq buffer-name-history '("_profile.html.erb" "*Messages*" "init.el" "*scratch*" "console-term" "*ansi-term*" "users_controller.rb" "*ansi-term*" "console-term" "*ansi-term*" "server-term"))
(setq extended-command-history '("eval-expression" "rinari-find-view" "hl-line-mode" "ansi-term" "rename-buffer" "ansi-term" "rename-buffer"))
(setq magit-read-rev-history '("master (origin)" "samiur/aoap2" "2.1 (octopress)" "source"))
(setq query-replace-history '("3242" "3342"))
(setq ido-buffer-history '("_profile.html.erb" "*Messages*" #("init.el" 0 7 (face ido-virtual)) "*scratch*" "console-term" "*ansi-term*" "users_controller.rb" #("init.el" 0 7 (face ido-virtual)) "users_controller.rb" "*ansi-term*" "console-term" "*ansi-term*" "Gemfile" "*magit-diff*" "*scratch*" "*nrepl*" "euler40.clj" "*nrepl*" "euler40.clj" "*nrepl*" "euler40.clj" "*Ibuffer*" "euler40.clj" "euler14.clj" "euler40.clj" "euler14.clj" "euler40.clj" "euler40.go" "hello.go" "euler40.go"))
(setq ido-file-history '("new.html.erb" "autostart.el" "_profile.html.erb" "linkedin.html.erb" "_sign_in.html.erb" "linkedin_controller.rb" "inf-ruby.el" "Gemfile" "new.html.erb" "users_controller.rb" "usb_aoap_driver.cpp" "Gemfile" "init.el" "euler14.clj" "euler40.clj" "euler40.go" "hello.go" "andrey_logs.txt" "samiur_work_log.txt" "samiur_logs.txt" ".gitignore" "page.html" "post.html" "default.html" "page.html" "sharing.html" "facebook_like.html" "article.html" "default.html" "page.html"))
(setq minibuffer-history '("package-list-packages" "inf-ruby" "package-install" "el-get-remove" "eval-expression" "comment-or-uncomment-region" "package-list-packages" "package-menu-mark-delete" "comment-or-uncomment-region" "inf-ruby" "el-get-install" "eval-region" "inf-ruby" "package-install" "package-refresh-contents" "inf-ruby" "package-install" "inf-ruby" "package-install" "inf-ruby" "package-install" "solarized-dark" "load-theme" "info" "comment-or-uncomment-region" "nxhtml-" "nxml-mode" "package-install" "rinari-web-server" "rinari-launch"))
(setq regexp-search-ring '("starter" "starter-kit" "setup" "inf-ruby" "inf-" "installed" "inf-ruby" "4" "3" "s" "indend" "g" "pared" "el-get" "clojure"))
